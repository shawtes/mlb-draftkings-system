{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\smtes\\\\Downloads\\\\coinbase_ml_trader\\\\web_optimizer\\\\client\\\\src\\\\components\\\\TeamStacksTab.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Grid, Card, CardContent, Paper, Tabs, Tab, Button, Stack, Alert, Chip, Badge, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Checkbox, TextField } from '@mui/material';\nimport { Sports, Timeline, Group, CheckCircle, Assessment, TrendingUp, Refresh, Star } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TeamStacksTab = ({\n  players = [],\n  teamStacks = [],\n  onTeamStacksUpdate\n}) => {\n  _s();\n  var _stackSizes$currentSt;\n  const [currentStackTab, setCurrentStackTab] = useState(0);\n  const [teamStackSettings, setTeamStackSettings] = useState({});\n  const [loading, setLoading] = useState(false);\n  const stackSizes = [{\n    value: 'All Stacks',\n    label: 'All Stacks',\n    description: 'View and configure all team stack settings'\n  }, {\n    value: '2 Stack',\n    label: '2 Stack',\n    description: 'Stack 2 players from the same team'\n  }, {\n    value: '3 Stack',\n    label: '3 Stack',\n    description: 'Stack 3 players from the same team'\n  }, {\n    value: '4 Stack',\n    label: '4 Stack',\n    description: 'Stack 4 players from the same team'\n  }, {\n    value: '5 Stack',\n    label: '5 Stack',\n    description: 'Stack 5 players from the same team'\n  }];\n\n  // Initialize team stack settings\n  useEffect(() => {\n    const uniqueTeams = [...new Set(players.map(p => p.team))].filter(Boolean);\n    const newSettings = {};\n    stackSizes.forEach(stackSize => {\n      newSettings[stackSize.value] = {};\n      uniqueTeams.forEach(team => {\n        newSettings[stackSize.value][team] = {\n          team,\n          selected: false,\n          status: 'Active',\n          projectedRuns: Math.random() * 6 + 3,\n          minExposure: 0,\n          maxExposure: 100,\n          actualExposure: 0,\n          playerCount: players.filter(p => p.team === team).length\n        };\n      });\n    });\n    setTeamStackSettings(newSettings);\n  }, [players]);\n  const handleTeamSelection = (stackSize, team, selected) => {\n    setTeamStackSettings(prev => ({\n      ...prev,\n      [stackSize]: {\n        ...prev[stackSize],\n        [team]: {\n          ...prev[stackSize][team],\n          selected\n        }\n      }\n    }));\n  };\n  const handleExposureChange = (stackSize, team, field, value) => {\n    setTeamStackSettings(prev => ({\n      ...prev,\n      [stackSize]: {\n        ...prev[stackSize],\n        [team]: {\n          ...prev[stackSize][team],\n          [field]: Math.max(0, Math.min(100, value))\n        }\n      }\n    }));\n  };\n  const getSelectedTeamsCount = stackSize => {\n    return Object.values(teamStackSettings[stackSize] || {}).filter(team => team.selected).length;\n  };\n  const getStackSizeColor = stackSize => {\n    const colors = {\n      'All Stacks': '#9C27B0',\n      '2 Stack': '#2196F3',\n      '3 Stack': '#4CAF50',\n      '4 Stack': '#FF9800',\n      '5 Stack': '#F44336'\n    };\n    return colors[stackSize] || '#9C27B0';\n  };\n  const renderTeamStackTable = stackSize => {\n    const teams = Object.values(teamStackSettings[stackSize] || {});\n    if (teams.length === 0) {\n      return /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"info\",\n        children: \"No teams available. Please upload player data first.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      sx: {\n        background: 'rgba(255,255,255,0.02)'\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Team\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Players\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Proj Runs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Min Exp %\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Max Exp %\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Actual %\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: teams.map(team => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: team.selected,\n                onChange: e => handleTeamSelection(stackSize, team.team, e.target.checked),\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  fontWeight: 600\n                },\n                children: team.team\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Chip, {\n                label: team.status,\n                size: \"small\",\n                color: team.status === 'Active' ? 'success' : 'default'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: team.playerCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: team.projectedRuns.toFixed(1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                type: \"number\",\n                value: team.minExposure,\n                onChange: e => handleExposureChange(stackSize, team.team, 'minExposure', Number(e.target.value)),\n                size: \"small\",\n                inputProps: {\n                  min: 0,\n                  max: 100,\n                  step: 1\n                },\n                sx: {\n                  width: 70\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                type: \"number\",\n                value: team.maxExposure,\n                onChange: e => handleExposureChange(stackSize, team.team, 'maxExposure', Number(e.target.value)),\n                size: \"small\",\n                inputProps: {\n                  min: 0,\n                  max: 100,\n                  step: 1\n                },\n                sx: {\n                  width: 70\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [team.actualExposure.toFixed(1), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this)]\n          }, team.team, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Sports, {\n        sx: {\n          mr: 2,\n          color: '#2196F3',\n          fontSize: 32\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          sx: {\n            fontWeight: 700,\n            color: '#2196F3'\n          },\n          children: \"Team Stacks Configuration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          children: \"Configure team stacking strategies and exposure settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      sx: {\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            background: 'rgba(76, 175, 80, 0.1)',\n            border: '1px solid rgba(76, 175, 80, 0.3)'\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            sx: {\n              p: 2,\n              '&:last-child': {\n                pb: 2\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                gap: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Group, {\n                sx: {\n                  color: '#4CAF50'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  sx: {\n                    color: '#4CAF50',\n                    fontWeight: 600\n                  },\n                  children: Object.keys(teamStackSettings['All Stacks'] || {}).length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  color: \"textSecondary\",\n                  children: \"Available Teams\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            background: 'rgba(33, 150, 243, 0.1)',\n            border: '1px solid rgba(33, 150, 243, 0.3)'\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            sx: {\n              p: 2,\n              '&:last-child': {\n                pb: 2\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                gap: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n                sx: {\n                  color: '#2196F3'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  sx: {\n                    color: '#2196F3',\n                    fontWeight: 600\n                  },\n                  children: getSelectedTeamsCount(((_stackSizes$currentSt = stackSizes[currentStackTab]) === null || _stackSizes$currentSt === void 0 ? void 0 : _stackSizes$currentSt.value) || 'All Stacks')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  color: \"textSecondary\",\n                  children: \"Selected Teams\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            background: 'rgba(255, 152, 0, 0.1)',\n            border: '1px solid rgba(255, 152, 0, 0.3)'\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            sx: {\n              p: 2,\n              '&:last-child': {\n                pb: 2\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                gap: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Assessment, {\n                sx: {\n                  color: '#FF9800'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  sx: {\n                    color: '#FF9800',\n                    fontWeight: 600\n                  },\n                  children: Object.values(teamStackSettings['All Stacks'] || {}).filter(t => t.status === 'Active').length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  color: \"textSecondary\",\n                  children: \"Active Teams\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            background: 'rgba(156, 39, 176, 0.1)',\n            border: '1px solid rgba(156, 39, 176, 0.3)'\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            sx: {\n              p: 2,\n              '&:last-child': {\n                pb: 2\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                gap: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(TrendingUp, {\n                sx: {\n                  color: '#9C27B0'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  sx: {\n                    color: '#9C27B0',\n                    fontWeight: 600\n                  },\n                  children: Object.values(teamStackSettings['All Stacks'] || {}).reduce((sum, t) => sum + t.projectedRuns, 0).toFixed(0)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  color: \"textSecondary\",\n                  children: \"Total Projected\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Tabs, {\n        value: currentStackTab,\n        onChange: (_, newValue) => setCurrentStackTab(newValue),\n        variant: \"scrollable\",\n        scrollButtons: \"auto\",\n        sx: {\n          borderBottom: '1px solid rgba(255,255,255,0.1)',\n          '& .MuiTab-root': {\n            textTransform: 'none',\n            fontWeight: 500,\n            minHeight: 72\n          }\n        },\n        children: stackSizes.map((stackSize, index) => /*#__PURE__*/_jsxDEV(Tab, {\n          label: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: 1\n            },\n            children: /*#__PURE__*/_jsxDEV(Badge, {\n              badgeContent: getSelectedTeamsCount(stackSize.value),\n              color: \"primary\",\n              sx: {\n                '& .MuiBadge-badge': {\n                  fontSize: '0.7rem'\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(Chip, {\n                icon: stackSize.value === 'All Stacks' ? /*#__PURE__*/_jsxDEV(Timeline, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 60\n                }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  sx: {\n                    fontWeight: 600\n                  },\n                  children: stackSize.value.split(' ')[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 25\n                }, this),\n                label: stackSize.label,\n                size: \"small\",\n                sx: {\n                  backgroundColor: getStackSizeColor(stackSize.value),\n                  color: 'white',\n                  '& .MuiChip-icon': {\n                    color: 'white'\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 17\n          }, this),\n          sx: {\n            '&.Mui-selected': {\n              background: `linear-gradient(135deg, ${getStackSizeColor(stackSize.value)}20, transparent)`\n            }\n          }\n        }, stackSize.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flex: 1,\n          p: 3,\n          overflow: 'auto'\n        },\n        children: stackSizes.map((stackSize, index) => /*#__PURE__*/_jsxDEV(Box, {\n          hidden: currentStackTab !== index,\n          children: currentStackTab === index && /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Alert, {\n              severity: \"info\",\n              sx: {\n                mb: 3\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  fontWeight: 600\n                },\n                children: stackSize.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: stackSize.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 19\n            }, this), renderTeamStackTable(stackSize.value)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 17\n          }, this)\n        }, stackSize.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2,\n        display: 'flex',\n        gap: 2,\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        children: \"Configure team selections and exposure limits for each stack size\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        spacing: 1,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          startIcon: /*#__PURE__*/_jsxDEV(Refresh, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 24\n          }, this),\n          onClick: () => {},\n          disabled: loading,\n          sx: {\n            borderColor: '#2196F3',\n            color: '#2196F3'\n          },\n          children: \"Refresh Team Stacks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          startIcon: /*#__PURE__*/_jsxDEV(Star, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 24\n          }, this),\n          onClick: () => {\n            // Convert settings to match the expected format\n            const formattedSettings = Object.entries(teamStackSettings).reduce((acc, [stackSize, teams]) => {\n              acc[stackSize] = Object.values(teams).filter(team => team.selected).map(team => team.team);\n              return acc;\n            }, {});\n            onTeamStacksUpdate(formattedSettings);\n            console.log('Saving team stack settings:', formattedSettings);\n          },\n          sx: {\n            background: 'linear-gradient(45deg, #667eea, #764ba2)',\n            '&:hover': {\n              background: 'linear-gradient(45deg, #5a6fd8, #6a4190)'\n            }\n          },\n          children: \"Save Configuration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 5\n  }, this);\n};\n_s(TeamStacksTab, \"xHY8qGtDCcSp/hepJWqR1GEWhRA=\");\n_c = TeamStacksTab;\nexport default TeamStacksTab;\nvar _c;\n$RefreshReg$(_c, \"TeamStacksTab\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Grid","Card","CardContent","Paper","Tabs","Tab","Button","Stack","Alert","Chip","Badge","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Checkbox","TextField","Sports","Timeline","Group","CheckCircle","Assessment","TrendingUp","Refresh","Star","jsxDEV","_jsxDEV","TeamStacksTab","players","teamStacks","onTeamStacksUpdate","_s","_stackSizes$currentSt","currentStackTab","setCurrentStackTab","teamStackSettings","setTeamStackSettings","loading","setLoading","stackSizes","value","label","description","uniqueTeams","Set","map","p","team","filter","Boolean","newSettings","forEach","stackSize","selected","status","projectedRuns","Math","random","minExposure","maxExposure","actualExposure","playerCount","length","handleTeamSelection","prev","handleExposureChange","field","max","min","getSelectedTeamsCount","Object","values","getStackSizeColor","colors","renderTeamStackTable","teams","severity","children","fileName","_jsxFileName","lineNumber","columnNumber","component","sx","background","size","checked","onChange","e","target","variant","fontWeight","color","toFixed","type","Number","inputProps","step","width","display","alignItems","mb","mr","fontSize","container","spacing","item","xs","sm","md","border","pb","gap","keys","t","reduce","sum","flex","flexDirection","_","newValue","scrollButtons","borderBottom","textTransform","minHeight","index","badgeContent","icon","split","backgroundColor","overflow","hidden","mt","justifyContent","direction","startIcon","onClick","disabled","borderColor","formattedSettings","entries","acc","console","log","_c","$RefreshReg$"],"sources":["c:/Users/smtes/Downloads/coinbase_ml_trader/web_optimizer/client/src/components/TeamStacksTab.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Paper,\r\n  Tabs,\r\n  Tab,\r\n  Button,\r\n  Stack,\r\n  Alert,\r\n  Chip,\r\n  Badge,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Checkbox,\r\n  TextField\r\n} from '@mui/material';\r\nimport {\r\n  Sports,\r\n  Timeline,\r\n  Group,\r\n  CheckCircle,\r\n  Assessment,\r\n  TrendingUp,\r\n  Refresh,\r\n  Star\r\n} from '@mui/icons-material';\r\n\r\ninterface Player {\r\n  id: string;\r\n  name: string;\r\n  position: string;\r\n  team: string;\r\n  salary: number;\r\n  projection: number;\r\n  selected: boolean;\r\n}\r\n\r\ninterface TeamStackSettings {\r\n  team: string;\r\n  selected: boolean;\r\n  status: 'Active' | 'Inactive' | 'Limited';\r\n  projectedRuns: number;\r\n  minExposure: number;\r\n  maxExposure: number;\r\n  actualExposure: number;\r\n  playerCount: number;\r\n}\r\n\r\ninterface TeamStacksTabProps {\r\n  players: Player[];\r\n  teamStacks: any[];\r\n  onTeamStacksUpdate: (stacks: {[key: string]: string[]}) => void;\r\n}\r\n\r\nconst TeamStacksTab: React.FC<TeamStacksTabProps> = ({\r\n  players = [],\r\n  teamStacks = [],\r\n  onTeamStacksUpdate\r\n}) => {\r\n  const [currentStackTab, setCurrentStackTab] = useState(0);\r\n  const [teamStackSettings, setTeamStackSettings] = useState<{[stackSize: string]: {[team: string]: TeamStackSettings}}>({});\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const stackSizes = [\r\n    { value: 'All Stacks', label: 'All Stacks', description: 'View and configure all team stack settings' },\r\n    { value: '2 Stack', label: '2 Stack', description: 'Stack 2 players from the same team' },\r\n    { value: '3 Stack', label: '3 Stack', description: 'Stack 3 players from the same team' },\r\n    { value: '4 Stack', label: '4 Stack', description: 'Stack 4 players from the same team' },\r\n    { value: '5 Stack', label: '5 Stack', description: 'Stack 5 players from the same team' }\r\n  ];\r\n\r\n  // Initialize team stack settings\r\n  useEffect(() => {\r\n    const uniqueTeams = [...new Set(players.map(p => p.team))].filter(Boolean);\r\n    const newSettings: {[stackSize: string]: {[team: string]: TeamStackSettings}} = {};\r\n    \r\n    stackSizes.forEach(stackSize => {\r\n      newSettings[stackSize.value] = {};\r\n      uniqueTeams.forEach(team => {\r\n        newSettings[stackSize.value][team] = {\r\n          team,\r\n          selected: false,\r\n          status: 'Active',\r\n          projectedRuns: Math.random() * 6 + 3,\r\n          minExposure: 0,\r\n          maxExposure: 100,\r\n          actualExposure: 0,\r\n          playerCount: players.filter(p => p.team === team).length\r\n        };\r\n      });\r\n    });\r\n    \r\n    setTeamStackSettings(newSettings);\r\n  }, [players]);\r\n\r\n  const handleTeamSelection = (stackSize: string, team: string, selected: boolean) => {\r\n    setTeamStackSettings(prev => ({\r\n      ...prev,\r\n      [stackSize]: {\r\n        ...prev[stackSize],\r\n        [team]: {\r\n          ...prev[stackSize][team],\r\n          selected\r\n        }\r\n      }\r\n    }));\r\n  };\r\n\r\n  const handleExposureChange = (stackSize: string, team: string, field: 'minExposure' | 'maxExposure', value: number) => {\r\n    setTeamStackSettings(prev => ({\r\n      ...prev,\r\n      [stackSize]: {\r\n        ...prev[stackSize],\r\n        [team]: {\r\n          ...prev[stackSize][team],\r\n          [field]: Math.max(0, Math.min(100, value))\r\n        }\r\n      }\r\n    }));\r\n  };\r\n\r\n  const getSelectedTeamsCount = (stackSize: string) => {\r\n    return Object.values(teamStackSettings[stackSize] || {}).filter(team => team.selected).length;\r\n  };\r\n\r\n  const getStackSizeColor = (stackSize: string) => {\r\n    const colors = {\r\n      'All Stacks': '#9C27B0',\r\n      '2 Stack': '#2196F3',\r\n      '3 Stack': '#4CAF50',\r\n      '4 Stack': '#FF9800',\r\n      '5 Stack': '#F44336'\r\n    };\r\n    return colors[stackSize as keyof typeof colors] || '#9C27B0';\r\n  };\r\n\r\n  const renderTeamStackTable = (stackSize: string) => {\r\n    const teams = Object.values(teamStackSettings[stackSize] || {});\r\n    \r\n    if (teams.length === 0) {\r\n      return (\r\n        <Alert severity=\"info\">\r\n          No teams available. Please upload player data first.\r\n        </Alert>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <TableContainer component={Paper} sx={{ background: 'rgba(255,255,255,0.02)' }}>\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Select</TableCell>\r\n              <TableCell>Team</TableCell>\r\n              <TableCell>Status</TableCell>\r\n              <TableCell>Players</TableCell>\r\n              <TableCell>Proj Runs</TableCell>\r\n              <TableCell>Min Exp %</TableCell>\r\n              <TableCell>Max Exp %</TableCell>\r\n              <TableCell>Actual %</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {teams.map((team) => (\r\n              <TableRow key={team.team}>\r\n                <TableCell>\r\n                  <Checkbox\r\n                    checked={team.selected}\r\n                    onChange={(e) => handleTeamSelection(stackSize, team.team, e.target.checked)}\r\n                    size=\"small\"\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Typography variant=\"body2\" sx={{ fontWeight: 600 }}>\r\n                    {team.team}\r\n                  </Typography>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Chip\r\n                    label={team.status}\r\n                    size=\"small\"\r\n                    color={team.status === 'Active' ? 'success' : 'default'}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>{team.playerCount}</TableCell>\r\n                <TableCell>{team.projectedRuns.toFixed(1)}</TableCell>\r\n                <TableCell>\r\n                  <TextField\r\n                    type=\"number\"\r\n                    value={team.minExposure}\r\n                    onChange={(e) => handleExposureChange(stackSize, team.team, 'minExposure', Number(e.target.value))}\r\n                    size=\"small\"\r\n                    inputProps={{ min: 0, max: 100, step: 1 }}\r\n                    sx={{ width: 70 }}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <TextField\r\n                    type=\"number\"\r\n                    value={team.maxExposure}\r\n                    onChange={(e) => handleExposureChange(stackSize, team.team, 'maxExposure', Number(e.target.value))}\r\n                    size=\"small\"\r\n                    inputProps={{ min: 0, max: 100, step: 1 }}\r\n                    sx={{ width: 70 }}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>{team.actualExposure.toFixed(1)}%</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      {/* Header */}\r\n      <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\r\n        <Sports sx={{ mr: 2, color: '#2196F3', fontSize: 32 }} />\r\n        <Box>\r\n          <Typography variant=\"h4\" sx={{ fontWeight: 700, color: '#2196F3' }}>\r\n            Team Stacks Configuration\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\">\r\n            Configure team stacking strategies and exposure settings\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* Quick Stats Cards */}\r\n      <Grid container spacing={2} sx={{ mb: 3 }}>\r\n        <Grid item xs={12} sm={6} md={3}>\r\n          <Card sx={{ background: 'rgba(76, 175, 80, 0.1)', border: '1px solid rgba(76, 175, 80, 0.3)' }}>\r\n            <CardContent sx={{ p: 2, '&:last-child': { pb: 2 } }}>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                <Group sx={{ color: '#4CAF50' }} />\r\n                <Box>\r\n                  <Typography variant=\"h6\" sx={{ color: '#4CAF50', fontWeight: 600 }}>\r\n                    {Object.keys(teamStackSettings['All Stacks'] || {}).length}\r\n                  </Typography>\r\n                  <Typography variant=\"caption\" color=\"textSecondary\">\r\n                    Available Teams\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={3}>\r\n          <Card sx={{ background: 'rgba(33, 150, 243, 0.1)', border: '1px solid rgba(33, 150, 243, 0.3)' }}>\r\n            <CardContent sx={{ p: 2, '&:last-child': { pb: 2 } }}>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                <CheckCircle sx={{ color: '#2196F3' }} />\r\n                <Box>\r\n                  <Typography variant=\"h6\" sx={{ color: '#2196F3', fontWeight: 600 }}>\r\n                    {getSelectedTeamsCount(stackSizes[currentStackTab]?.value || 'All Stacks')}\r\n                  </Typography>\r\n                  <Typography variant=\"caption\" color=\"textSecondary\">\r\n                    Selected Teams\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={3}>\r\n          <Card sx={{ background: 'rgba(255, 152, 0, 0.1)', border: '1px solid rgba(255, 152, 0, 0.3)' }}>\r\n            <CardContent sx={{ p: 2, '&:last-child': { pb: 2 } }}>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                <Assessment sx={{ color: '#FF9800' }} />\r\n                <Box>\r\n                  <Typography variant=\"h6\" sx={{ color: '#FF9800', fontWeight: 600 }}>\r\n                    {Object.values(teamStackSettings['All Stacks'] || {}).filter(t => t.status === 'Active').length}\r\n                  </Typography>\r\n                  <Typography variant=\"caption\" color=\"textSecondary\">\r\n                    Active Teams\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={3}>\r\n          <Card sx={{ background: 'rgba(156, 39, 176, 0.1)', border: '1px solid rgba(156, 39, 176, 0.3)' }}>\r\n            <CardContent sx={{ p: 2, '&:last-child': { pb: 2 } }}>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                <TrendingUp sx={{ color: '#9C27B0' }} />\r\n                <Box>\r\n                  <Typography variant=\"h6\" sx={{ color: '#9C27B0', fontWeight: 600 }}>\r\n                    {Object.values(teamStackSettings['All Stacks'] || {}).reduce((sum, t) => sum + t.projectedRuns, 0).toFixed(0)}\r\n                  </Typography>\r\n                  <Typography variant=\"caption\" color=\"textSecondary\">\r\n                    Total Projected\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* Stack Size Tabs */}\r\n      <Paper sx={{ flex: 1, display: 'flex', flexDirection: 'column' }}>\r\n        <Tabs\r\n          value={currentStackTab}\r\n          onChange={(_, newValue) => setCurrentStackTab(newValue)}\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"auto\"\r\n          sx={{\r\n            borderBottom: '1px solid rgba(255,255,255,0.1)',\r\n            '& .MuiTab-root': {\r\n              textTransform: 'none',\r\n              fontWeight: 500,\r\n              minHeight: 72\r\n            }\r\n          }}\r\n        >\r\n          {stackSizes.map((stackSize, index) => (\r\n            <Tab\r\n              key={stackSize.value}\r\n              label={\r\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                  <Badge \r\n                    badgeContent={getSelectedTeamsCount(stackSize.value)} \r\n                    color=\"primary\"\r\n                    sx={{ '& .MuiBadge-badge': { fontSize: '0.7rem' } }}\r\n                  >\r\n                    <Chip\r\n                      icon={\r\n                        stackSize.value === 'All Stacks' ? <Timeline /> :\r\n                        <Typography variant=\"caption\" sx={{ fontWeight: 600 }}>\r\n                          {stackSize.value.split(' ')[0]}\r\n                        </Typography>\r\n                      }\r\n                      label={stackSize.label}\r\n                      size=\"small\"\r\n                      sx={{ \r\n                        backgroundColor: getStackSizeColor(stackSize.value),\r\n                        color: 'white',\r\n                        '& .MuiChip-icon': { color: 'white' }\r\n                      }}\r\n                    />\r\n                  </Badge>\r\n                </Box>\r\n              }\r\n              sx={{ \r\n                '&.Mui-selected': {\r\n                  background: `linear-gradient(135deg, ${getStackSizeColor(stackSize.value)}20, transparent)`\r\n                }\r\n              }}\r\n            />\r\n          ))}\r\n        </Tabs>\r\n\r\n        {/* Tab Content */}\r\n        <Box sx={{ flex: 1, p: 3, overflow: 'auto' }}>\r\n          {stackSizes.map((stackSize, index) => (\r\n            <Box key={stackSize.value} hidden={currentStackTab !== index}>\r\n              {currentStackTab === index && (\r\n                <Box>\r\n                  {/* Stack Size Description */}\r\n                  <Alert severity=\"info\" sx={{ mb: 3 }}>\r\n                    <Typography variant=\"body2\" sx={{ fontWeight: 600 }}>\r\n                      {stackSize.label}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">\r\n                      {stackSize.description}\r\n                    </Typography>\r\n                  </Alert>\r\n\r\n                  {/* Team Stack Table */}\r\n                  {renderTeamStackTable(stackSize.value)}\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n      </Paper>\r\n\r\n      {/* Footer Actions */}\r\n      <Box sx={{ mt: 2, display: 'flex', gap: 2, justifyContent: 'space-between', alignItems: 'center' }}>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">\r\n          Configure team selections and exposure limits for each stack size\r\n        </Typography>\r\n        <Stack direction=\"row\" spacing={1}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            startIcon={<Refresh />}\r\n            onClick={() => {}}\r\n            disabled={loading}\r\n            sx={{ borderColor: '#2196F3', color: '#2196F3' }}\r\n          >\r\n            Refresh Team Stacks\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            startIcon={<Star />}\r\n            onClick={() => {\r\n              // Convert settings to match the expected format\r\n              const formattedSettings = Object.entries(teamStackSettings).reduce((acc, [stackSize, teams]) => {\r\n                acc[stackSize] = Object.values(teams).filter(team => team.selected).map(team => team.team);\r\n                return acc;\r\n              }, {} as {[key: string]: string[]});\r\n              \r\n              onTeamStacksUpdate(formattedSettings);\r\n              console.log('Saving team stack settings:', formattedSettings);\r\n            }}\r\n            sx={{ \r\n              background: 'linear-gradient(45deg, #667eea, #764ba2)',\r\n              '&:hover': {\r\n                background: 'linear-gradient(45deg, #5a6fd8, #6a4190)'\r\n              }\r\n            }}\r\n          >\r\n            Save Configuration\r\n          </Button>\r\n        </Stack>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TeamStacksTab; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}